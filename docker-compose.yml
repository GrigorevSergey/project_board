services:
  web-app:
    build:
      context: .
    ports:
      - '8000:8000'
    volumes:
      - .:/app/
    working_dir: /app/src
    env_file:
      - .env-local
    command: >
      sh -c "./manage.py migrate --noinput
      && ./manage.py warmup 
      && ./manage.py runserver 0.0.0.0:8000"
    depends_on:
      - database
    networks:
      - my_app_network


  database:
    image: postgres:17-alpine
    container_name: postgresapp
    env_file: 
      - .env-local
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_app_network

    
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - my_app_network


  worker:
    build: 
      context: .
    hostname: celery
    command: celery -A config.celery worker --loglevel=info 
    env_file:
      - .env-local
    depends_on:
      - redis
      - database
    networks:
      - my_app_network



  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - grafanadata:/var/lib/grafana
    networks:
      - my_app_network


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    depends_on:
      - web-app
    networks:
      - my_app_network


  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    ports:
      - "9080:9080"
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail-config.yaml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    privileged: true

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml


networks:
  my_app_network: 
    driver: bridge

volumes:
  postgres_data:
  grafanadata:
  prometheusdata:
